# Use postgres/example user/password credentials

services:

  pgproxy:
    build: .
    image: pg-tcp-proxy
    ports:
      - 1235:1235
    environment:
      PROXY_HOST: 0.0.0.0
      PROXY_PORT: 1235
      TARGET_HOST: db
      TARGET_PORT: 5432
      QUERY_LOG_FILE_PATH: /logs/query.log
    volumes:
      - ./logs:/logs
    depends_on:
      db:
        condition: service_healthy

  echo:
    image: pg-tcp-proxy
    command: echo
    ports:
      - 1234:1234
    environment:
      ECHO_HOST: 0.0.0.0
      ECHO_PORT: 1234
    depends_on:
      - pgproxy

  initdb:
    image: pg-tcp-proxy
    command: init-db
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: sbtest
      POSTGRES_DB: sbtest
      POSTGRES_PASSWORD: password
    depends_on:
      pgproxy:
        condition: service_started
      db:
        condition: service_healthy
    links:
      - db:db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1" ]
      interval: 3s
      timeout: 180s
      retries: 60
      # start_period: 3s

  dryrun:
    image: pg-tcp-proxy
    command: dry-run
    environment:
      TEST_THREADS_COUNT: 64
      TEST_PERIOD_SECONDS: 30
      TARGET_PORT: 5432
      POSTGRES_HOST: db
      POSTGRES_USER: sbtest
      POSTGRES_DB: sbtest
      POSTGRES_PASSWORD: password
    depends_on:
      pgproxy:
        condition: service_started
      initdb:
        condition: "service_healthy"
    # https://github.com/docker/compose/issues/5007#issuecomment-335815508
    links:
      - initdb:initdb
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1" ]
      interval: 3s
      timeout: 3600s
      retries: 1200
      # start_period: 3s

  testrun:
    image: pg-tcp-proxy
    command: test-run
    environment:
      TEST_THREADS_COUNT: 64
      TEST_PERIOD_SECONDS: 30
      PROXY_PORT: 1235
      POSTGRES_HOST: pgproxy
      POSTGRES_USER: sbtest
      POSTGRES_DB: sbtest
      POSTGRES_PASSWORD: password
    depends_on:
      pgproxy:
        condition: service_started
      dryrun:
        condition: service_healthy
    # https://github.com/docker/compose/issues/5007#issuecomment-335815508
    links:
      - dryrun:dryrun
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1" ]
      interval: 3s
      timeout: 3600s
      retries: 1200
      # start_period: 3s

  db:
    image: postgres
    restart: always
    ports:
      - 5433:5432
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    volumes:
      - dbdata:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: sbtest
      POSTGRES_DB: sbtest
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    # https://stackoverflow.com/a/72175755/1490653
    healthcheck:
      test: [ "CMD-SHELL", "psql -U $${POSTGRES_USER} -d $${POSTGRES_DB} -c 'SELECT 1' || exit 1" ]
      interval: 3s
      timeout: 60s
      retries: 20
      # start_period: 3s

  lighttpd:
    image: pg-tcp-proxy
    command: lighttpd
    ports:
      - 8080:80
    depends_on:
      - pgproxy

volumes:
  dbdata:
